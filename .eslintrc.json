{
  "root": true,
  "settings": {
    "jest": {
      "version": 27
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:node/recommended-module",
    "plugin:import/recommended",
    "plugin:unicorn/recommended",
    "plugin:jest/recommended",
    "plugin:prettier/recommended"
  ],
  "ignorePatterns": [".history/*", "dist/*"],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "env": {
    "es2021": true,
    "browser": true,
    "jest": true
  },
  "rules": {
    "quotes": ["error", "single"],
    "no-unused-vars": [
      "error",
      {
        "args": "none"
      }
    ],

    "array-callback-return": "error",
    "no-await-in-loop": "error",
    "no-duplicate-imports": "error",
    "no-promise-executor-return": "error",
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable-loop": "error",
    "no-use-before-define": "error",
    "require-atomic-updates": "error",

    "dot-notation": "error",
    "eqeqeq": "error",
    "no-confusing-arrow": ["error", { "allowParens": false }],
    "no-implicit-coercion": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-sequences": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-arrow-callback": "error",
    "prefer-const": "error",
    "prefer-destructuring": "error",

    "node/file-extension-in-import": ["error"],
    "node/no-extraneous-import": [
      "error",
      {
        "allowModules": ["@jest/globals"]
      }
    ],

    "unicorn/prevent-abbreviations": [
      "error",
      {
        "ignore": ["^e2e\\.spec", "Idx$", "Func$", "Def$", "def\\.spec$"]
      }
    ],
    "unicorn/no-array-callback-reference": "off",
    "unicorn/no-unreadable-array-destructuring": "off",
    "unicorn/prefer-top-level-await": "error",
    "unicorn/template-indent": [
      "error",
      {
        "tags": ["dedent", "onedent"],
        "selectors": [
          "VariableDeclaration[kind='const'] > VariableDeclarator[id.name='wat'] > TemplateLiteral"
        ]
      }
    ]
  }
}
